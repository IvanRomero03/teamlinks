generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Account {
  id                String  @id
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  ext_expires_in    Int?

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Admin {
  id             String  @id
  departamentoId String?

  @@index([departamentoId])
  @@index([id])
}

model Aplicacion {
  id            String   @id
  nombre        String
  fechaCreacion DateTime @default(now())
  candidatoId   String
  reclutadorId  String?
  estatus       String
  fechaEstatus  DateTime
  puestosId     String?

  @@index([candidatoId])
  @@index([puestosId])
  @@index([reclutadorId])
}

model CandiadateTechStack {
  id          String  @id
  name        String
  candidatoId String?

  @@index([candidatoId])
}

model CandidateExpirience {
  id          String   @id
  name        String
  date        DateTime
  description String
  position    String
  employer    String
  candidatoId String?

  @@index([candidatoId])
}

model Candidato {
  id            String @id
  tecPrincipal  String
  tecSecundaria String
  pais          String
  experiencia   Int
  Ranking       Int

  @@index([id])
}

model Departamento {
  id     String @id
  nombre String
}

model Example {
  id        String   @id
  createdAt DateTime @default(now())
  updatedAt DateTime
}

model Invitation {
  id        String   @id
  email     String
  createdAt DateTime @default(now())
  adminId   String

  @@index([adminId])
}

model MustHaves {
  id        String  @id
  name      String
  puestosId String?

  @@index([puestosId])
}

model Proyecto {
  id                 String   @id
  nombre             String
  descripcion        String   @db.Text
  pais               String
  type               String
  estatus            String?
  fechaCreacion      DateTime @default(now())
  fechaEstatusChange DateTime
  adminId            String
  numPosicionesTot   Int
  numPosicionesDis   Int
  departamentoId     String?

  @@index([adminId])
  @@index([departamentoId])
}

model Puestos {
  id                       String   @id
  jobTitle                 String
  descripcion              String   @db.Text
  tipo                     String
  employee                 Boolean
  contractor               Boolean
  Genus                    String
  hireCategory             String
  estatus                  String?
  fechaCreacion            DateTime @default(now())
  fechaEstatusChange       DateTime
  numPosiciones            Int
  numPosicionesDisponibles Int
  proyectoId               String
  departamentoId           String?

  @@index([departamentoId])
  @@index([proyectoId])
}

model Reclutador {
  id             String  @id
  country        String
  departamentoId String?
  adminId        String
  description    String  @db.Text

  @@index([adminId])
  @@index([departamentoId])
  @@index([id])
}

model ReclutadorProyectos {
  id           String @id
  reclutadorId String
  proyectoId   String

  @@index([proyectoId])
  @@index([reclutadorId])
}

model RecruiterTechStack {
  id           String @id
  name         String
  reclutadorId String

  @@index([reclutadorId])
}

model Requirement {
  id         String  @id
  name       String
  proyectoId String?

  @@index([proyectoId])
}

model Session {
  id           String   @id
  sessionToken String   @unique
  userId       String
  expires      DateTime

  @@index([userId])
}

model User {
  id            String    @id
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
